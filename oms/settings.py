#encoding:utf-8
"""
Django settings for oms project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import ConfigParser


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print BASE_DIR
config = ConfigParser.ConfigParser()
config.read(os.path.join(BASE_DIR, 'config/oms.conf'))

SERVER_URL = config.get('base','server_url')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'x$2gz6r8fmivgq0ex^bt3sao!lv=_$u9)dej(yq1%jgxsmbrz&'

#SALT_KEY
SALT_KEY = config.get('base', 'salt_key')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = False
DEBUG = True
LOG_LEVEL = config.get('base', 'log_level')
LOG_DIR = config.get('base', 'log_dir')

ALLOWED_HOSTS = ['*']
#TEMPLATE_DEBUG = True

LOGIN_URL = '/login/'

# mail config
MAIL_ENABLE = config.get('mail', 'mail_enable')
EMAIL_HOST = config.get('mail', 'email_host')
EMAIL_PORT = config.get('mail', 'email_port')
EMAIL_HOST_USER = config.get('mail', 'email_host_user')
EMAIL_HOST_PASSWORD = config.get('mail', 'email_host_password')
EMAIL_USE_TLS = config.getboolean('mail', 'email_use_tls')
try:
    EMAIL_USE_SSL = config.getboolean('mail', 'email_use_ssl')
except ConfigParser.NoOptionError:
    EMAIL_USE_SSL = False
EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend' if EMAIL_USE_SSL else 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_TIMEOUT = 5

#Session setting
SESSION_ENGINE='django.contrib.sessions.backends.cached_db'
SESSION_COOKIE_AGE=3600
SESSION_EXPIRE_AT_BROWSER_CLOSE=True
SESSION_SAVE_EVERY_REQUEST=True #只有设置此参数后，上面两个session有效期设置才起作用

#WEBSOCKET_ACCEPT
WEBSOCKET_ACCEPT_ALL=True


# Application definition
INSTALLED_APPS = [
#    'suit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'omsapp',
    'oms',
    'jenkinsapp',
    'zabbix',
    'redisapp'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'oms.urls'
AUTH_USER_MODEL = 'omsapp.omsUser'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                #'django.contrib.auth.context_processors.PermWrapper',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'oms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
           'ENGINE': 'django.db.backends.sqlite3',
           'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # 'ENGINE':'django.db.backends.mysql',
        # 'NAME':config.get('omsdb', 'database'),        # Or path to database file if using sqlite3.
        # 'USER':config.get('omsdb', 'user'),                      # Not used with sqlite3.
        # 'PASSWORD':config.get('omsdb', 'password'),                  # Not used with sqlite3.
        # 'HOST': config.get('omsdb', 'host'),                      # Set to empty string for localhost. Not used with sqlite3.
        # 'PORT': config.getint('omsdb', 'port'),
    },
   'zabbix_db':{
            'ENGINE':'django.db.backends.mysql',
            'NAME':config.get('zabbix_db', 'database'),
            'USER':config.get('zabbix_db', 'user'),
            'PASSWORD':config.get('zabbix_db', 'password'),
            'HOST': config.get('zabbix_db', 'host'),
            'PORT': config.getint('zabbix_db', 'port'),
  
    },
   'jenkins_db':{
            'ENGINE':'django.db.backends.mysql',
            'NAME':config.get('jenkins_db', 'database'),
            'USER':config.get('jenkins_db', 'user'),
            'PASSWORD':config.get('jenkins_db', 'password'),
            'HOST': config.get('jenkins_db', 'host'),
            'PORT': config.getint('jenkins_db', 'port'),
  
    }

}
DATABASE_ROUTERS = ['oms.database_router.DatabaseAppsRouter']
DATABASE_APPS_MAPPING = {
            # 'app_name':'database_name',
            'zabbix': 'zabbix_db',
            'jenkinsapp': 'jenkins_db'
                }

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = False

USE_TZ = False

#DATETIME_FORMAT = 'Y-m-d H:i:s'
#DATE_FORMAT = 'Y-m-d'

#SUIT_CONFIG = {  # suit页面配置
#    'ADMIN_NAME': '统一管理平台',  #登录界面提示
#    'LIST_PER_PAGE': 20,
    #'MENU': ({'label': u'用户管理', 'app': 'omsapp', 'models': ('omsapp.MyUser', 'auth.Group', 'web_sso.User_ex')},  #每一个字典表示左侧菜单的一栏
             # {'label': u'SQL管理', 'app': 'web_sso', 'models': ('web_sso.Sql', 'web_sso.PreSql', 'web_sso.Direction')},  # 可以是多个字典
            # ),
    # label表示name，app表示上边的install的app，models表示用了哪些models
#}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/



#STATIC_ROOT=os.path.join(BASE_DIR, "static")
#
# )

#STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # ("css", os.path.join(BASE_DIR,'static/bootstrap/css')),
    # ("js", os.path.join(BASE_DIR,'static/bootstrap/js')),
    # ("fonts", os.path.join(BASE_DIR,'static/bootstrap/fonts')),
 #   ("img", os.path.join(BASE_DIR,'static/img')),
  #  'static/',

#)



STATIC_URL = '/static/'

STATICFILES_DIRS = (
    BASE_DIR + '/static',
)
